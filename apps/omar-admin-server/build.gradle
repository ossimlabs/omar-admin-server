buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
     baseImage = "omar-base"
     dockerStatementsOverride = {
       [
          "FROM ${project.dockerNamespaceUrl}${project.ext.baseImage}:${project.dockerAppTag}",
          "COPY ${project.name}-${buildVersion}-${buildVersionTag}.jar \$HOME/",
          "EXPOSE 8080",
          "WORKDIR /home/omar",
          "CMD java -Xms256m -Xmx1024m -Dspring.profiles.active=production -Djava.security.egd=file:/dev/./urandom -Dserver.contextPath=/omar-admin-server -jar ./${project.name}-${buildVersion}-${buildVersionTag}.jar"
       ]
     }
	}
  if(System.env.OMAR_COMMON_PROPERTIES)
  {
      apply from: System.env.OMAR_COMMON_PROPERTIES
  }
   repositories {
      mavenLocal()
      maven { url "${ossimMavenProxy}" }
      mavenCentral()
   }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
plugins {
  id "com.github.ben-manes.versions" version "0.17.0"
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
//apply plugin: 'spring-boot'
apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "maven"
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8
group 'io.ossim.omar'


repositories {
  mavenLocal()
  maven { url "${ossimMavenProxy}" }
  mavenCentral()
}

ext {
	springCloudVersion = 'Dalston.SR4'
}

dependencies {
  compile('de.codecentric:spring-boot-admin-starter-client:1.5.7')
  compile('de.codecentric:spring-boot-admin-server:1.5.7')
  compile('de.codecentric:spring-boot-admin-server-ui:1.5.7')
  compile('org.springframework.boot:spring-boot-starter-actuator')
  compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.cloud:spring-cloud-starter-eureka')
  compile('org.codehaus.groovy:groovy')
  testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}
